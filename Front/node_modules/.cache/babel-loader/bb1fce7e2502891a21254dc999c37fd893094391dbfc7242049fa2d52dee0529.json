{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javie\\\\Desktop\\\\rick_and_morty\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n// import style from './Nav.module.css';\nimport { onSearch } from 'App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar(_ref) {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  const [character, setCharacter] = useState('');\n  const handleChange = event => {\n    // evento que se dispara cuando hay cambios en el input (seteo del estado) y guarda el valor del input\n    setCharacter(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.searchBar,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: style.input,\n      type: \"search\",\n      value: character,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this), \" proceso para renderizar el guardado del input que cambia el estado  */}\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.button,\n      onClick: () => onSearch(character),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n_s(SearchBar, \"pv9IsLL1os8EqJDWV1vNc0qPYrI=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","onSearch","SearchBar","character","setCharacter","handleChange","event","target","value","style","searchBar","input","button"],"sources":["C:/Users/javie/Desktop/rick_and_morty/src/components/SearchBar.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n// import style from './Nav.module.css';\r\nimport { onSearch } from 'App';\r\n\r\n\r\n\r\nfunction SearchBar({ onSearch }) {\r\n   const [character, setCharacter] = useState('')\r\n   \r\n   const handleChange = (event) => { // evento que se dispara cuando hay cambios en el input (seteo del estado) y guarda el valor del input\r\n      setCharacter(event.target.value)\r\n   };\r\n\r\n   return (\r\n      <div className={style.searchBar} >\r\n           <input className={style.input} type='search' value={character} onChange={handleChange} /> proceso para renderizar el guardado del input que cambia el estado  */}\r\n         <button className={style.button} onClick={() => onSearch(character)}>Agregar</button> {/* cuando se le pasa un parametro en el evento, se la ejecuta con una call back */}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default SearchBar;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAC;AAI/B,SAASC,SAAS,OAAe;EAAA;EAAA,IAAd;IAAED;EAAS,CAAC;EAC5B,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAAE;IAC/BF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACG;IAAK,SAAS,EAAEC,KAAK,CAACC,SAAU;IAAA,wBAC3B;MAAO,SAAS,EAAED,KAAK,CAACE,KAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,KAAK,EAAER,SAAU;MAAC,QAAQ,EAAEE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,4EAC3F;MAAQ,SAAS,EAAEI,KAAK,CAACG,MAAO;MAAC,OAAO,EAAE,MAAMX,QAAQ,CAACE,SAAS,CAAE;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,KAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACnF;AAEZ;AAAC,GAbQD,SAAS;AAAA,KAATA,SAAS;AAelB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}